// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Aluno {
  id              String           @id @default(uuid())
  nome            String
  telefone        String
  email           String           @unique
  endereco        String
  data_nascimento String
  senha           String
  data_inscricao  DateTime         @default(now())
  personal        Personal?        @relation(fields: [personalID], references: [id])
  personalID      String?
  treino          Treino[]        @relation("AlunoTreino")

  @@map("aluno")
}

model Personal {
  id        String    @id @default(uuid())
  nome      String
  telefone  String
  email     String    @unique
  CREF      String    @unique
  sexo      String
  senha     String
  aluno     Aluno[]
  treino    Treino[]
  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("personal")
}

model Treino {
  id              String           @id @default(uuid())
  nome_treino     String
  personal        Personal         @relation(fields: [personalID], references: [id])
  personalID      String
  aluno           Aluno[]       @relation("AlunoTreino")
  AlunoExercicio  AlunoExercicio[] 
}

model AlunoExercicio {
  id          String    @id @default(uuid())
  exercicioID String
  repeticoes  Int?
  descanso    Int?
  exercicio   Exercicio @relation(fields: [exercicioID], references: [id], onDelete: Cascade)
  treinos     Treino?   @relation(fields: [treinosID], references: [id]) // Relacionamento opcional
  treinosID   String?   // Tornando o campo opcional
}


model Exercicio {
  id              String           @id @default(uuid())
  nome_exercicio  String
  URL_video       String?
  alunoExercicios AlunoExercicio[]
  categoria       Categoria        @relation(fields: [categoriaID], references: [id], onDelete: Cascade)
  categoriaID     String

  @@map("exercicio")
}

model Categoria {
  id         String      @id @default(uuid())
  categoria  String
  exercicios Exercicio[]

  @@map("categoria")
}
